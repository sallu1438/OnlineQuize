@model OnlineQuize.Models.Question

@{
    ViewBag.Title = "AddQuestion";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<h2>AddQuestion</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

   

<div class="form-horizontal">
    <p class="alert-success">@TempData["msg"]</p>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.Categories.CName, "CName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CatId", ViewBag.catlist as SelectList, "Select Catagory", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CatId, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <center><h4>Enter Question</h4> </center>

    <div class="form-group">
        @Html.LabelFor(model => model.QName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QName, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <center><h4>Enter Options</h4> </center>



    <div class="form-group">
        @Html.LabelFor(model => model.OpA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OpA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OpA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OpB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OpB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OpB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OpC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OpC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OpC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OpD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OpD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OpD, "", new { @class = "text-danger" })
        </div>
    </div>


    <hr />
    <center><h4>Enter The Correct Answer</h4> </center>
    <div class="form-group">
        @Html.LabelFor(model => model.CuurectAns, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CuurectAns, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CuurectAns, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Question" class="btn btn-success" />
        </div>
    </div>
</div>
}


